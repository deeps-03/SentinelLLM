
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - log-streaming
  kafka:
    image: wurstmeister/kafka:2.13-2.8.1
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "logs:1:1"
    depends_on:
      - zookeeper
    networks:
      - log-streaming
  victoria-metrics:
    image: victoriametrics/victoria-metrics:latest
    ports:
      - "8428:8428"
    volumes:
      - victoria-metrics-data:/victoria-metrics-data
    networks:
      - log-streaming
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    depends_on:
      - victoria-metrics
    networks:
      - log-streaming
  log-producer:
    build:
      context: .
      dockerfile: Dockerfile.producer
    depends_on:
      - kafka
    networks:
      - log-streaming
  log-consumer:
    build:
      context: .
      dockerfile: Dockerfile.consumer
    depends_on:
      - kafka
      - victoria-metrics
    networks:
      - log-streaming
  anomaly-detector:
    build:
      context: .
      dockerfile: Dockerfile.anomaly_detector
    depends_on:
      - victoria-metrics
    networks:
      - log-streaming
    environment:
      - GRAFANA_API_KEY=${GRAFANA_API_KEY}

networks:
  log-streaming:
    driver: bridge

volumes:
  victoria-metrics-data:
  grafana-data: